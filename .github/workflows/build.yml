name: build

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Set up Go 1.16
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.16
        id: go
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Build
        run: ./build.sh --ci
      - name: Archive binaries
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            build/okr2go-linux-arm64.tar.gz
            build/okr2go-linux-amd64.tar.gz
            build/okr2go-darwin-arm64.tar.gz
            build/okr2go-darwin-amd64.tar.gz
            build/okr2go-windows-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-docker:
    name: Build Docker
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - uses: actions/download-artifact@v2
        with:
          path: .
      - name: Build
        run: |
          docker buildx build \
          --platform linux/arm64,linux/amd64 \
          .
      - name: Push to Registry
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          export VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          export VERSION=${VERSION:1:${#VERSION}} # drop the v
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker buildx build \
          --push \
          --platform linux/arm64,linux/amd64 \
          --tag ghcr.io/oxisto/okr2go:${VERSION} \
          --tag ghcr.io/oxisto/okr2go:latest \
          .
